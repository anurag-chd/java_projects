package AmazonInterview;

import Basics.GenTreeNode;
import binaryTree.BinaryST;
import binaryTree.TreeNode;

public class CheckBinaryTree {
	public static void main(String args[]){
		BinaryST btree = new BinaryST(8);
		btree.insert(6,btree.root);
		btree.insert(10,btree.root);
		btree.insert(5,btree.root);
		btree.insert(7,btree.root);
		btree.insert(9,btree.root);
		btree.insert(11,btree.root);
		
		GenTreeNode<Integer> root = new GenTreeNode<Integer>(5);
		root.setLeft_child(new GenTreeNode(8));
		root.setRight_child(new GenTreeNode(9));
		//root.getLeft_child().setLeft_child(new GenTreeNode(10));
		/*root.getLeft_child().getLeft_child().setLeft_child(new GenTreeNode(2));
		root.getLeft_child().getLeft_child().setRight_child(new GenTreeNode(1));
		root.getRight_child().setLeft_child(new GenTreeNode(8));
		root.getRight_child().setRight_child(new GenTreeNode(10));*/
		
		printInOrder(root);
		
		if(!(root.getLeft_child()!=null?(Integer)root.getData()>(Integer)root.getLeft_child().getData() : true)){
			System.out.println("Aaaaa");
		}
		else{
			System.out.println("CCCCCC");
		}
		
		/*if(check1(btree.root)){
			System.out.println("BST");
		}
		else{
			System.out.println("No BST");
		}*/
		if(check(root)){
			System.out.println("BST");
		}
		else{
			System.out.println("No BST");
		}		
	}

	
	//return n==null?true:(check_BST(n.left) && check_BST(n.right) && (n.left == null?true:(n.left.value <n.value)) && (n.right == null?true:(n.right.value >n.value)) );
	
	
	
	public static void printInOrder(GenTreeNode root){
		if(root == null){
			return;
		}
		else{
			printInOrder(root.getLeft_child());
			System.out.print(root.getData()+",");
			printInOrder(root.getRight_child());
		}
	}
	
	
	public static boolean check(GenTreeNode root){
		if(root == null){
			return true;
		}

	
			return (check(root.getLeft_child()) && check(root.getRight_child()) 
					&&
					//root.getLeft_child()!=null?(Integer)root.getData()>(Integer)root.getLeft_child().getData() : true
					root.getLeft_child() == null?true:((Integer)root.getData()>(Integer)root.getLeft_child().getData()) 
					&& 
					//root.getRight_child()!=null?(Integer)root.getData()<(Integer)root.getRight_child().getData() : true
					root.getRight_child() == null?true:((Integer)root.getData()<(Integer)root.getRight_child().getData())
					) ;
		
		
		
		
		
		
		
		
		/*if(root == null){
			return true;
		}
		else if(root.getLeft_child() == null && root.getRight_child() == null){
			return true;
			
		}
		else{
			check(root.getLeft_child());
			check(root.getRight_child());
			if(root.getLeft_child() == null){
				if((Integer)root.getData() < (Integer)root.getRight_child().getData()){
					return true;
				}
				else{
					return false;
				}
			}
			else if(root.getRight_child() == null){
				if((Integer)root.getData() >= (Integer)root.getLeft_child().getData()){
					return true;
				}
				else{
					return false;
				}
			}
			else{
				if((Integer)root.getData() >= (Integer)root.getLeft_child().getData() && (Integer)root.getData() < (Integer)root.getRight_child().getData()){
					return true;
				}
				else{
					return false;
				}
			}
			
			
			
		}*/
	}
	
	public static boolean check1(TreeNode root){
		
		if(root == null){
			return true;
		}
		else if (root.getLeft_child() == null && root.getRight_child() == null){
			return true;
		}
		else{
			return (check1(root.getLeft_child()) && check1(root.getRight_child()) 
					&& (Integer)root.getData()>(Integer)root.getLeft_child().getData()
					&& (Integer)root.getData()<(Integer)root.getRight_child().getData()
					) ;
		}
		
		/*
		if(root == null){
			return false;
		}
		else if(root.getLeft_child() == null && root.getRight_child() == null){
			return true;
			
		}
		else{
			check1(root.getLeft_child());
			check1(root.getRight_child());
			if(root.getLeft_child() == null){
				if((Integer)root.getData() < (Integer)root.getRight_child().getData()){
					return true;
				}
				else{
					return false;
				}
			}
			else if(root.getRight_child() == null){
				if((Integer)root.getData() >= (Integer)root.getLeft_child().getData()){
					return true;
				}
				else{
					return false;
				}
			}
			else{
				if((Integer)root.getData() >= (Integer)root.getLeft_child().getData() && (Integer)root.getData() < (Integer)root.getRight_child().getData()){
					return true;
				}
				else{
					return false;
				}
			}
			
			
			
		}
*/	}

	
	
	
	
}
